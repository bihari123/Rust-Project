{"message":"unresolved import `hyper::server::conn::Http`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":346,"byte_end":350,"line_start":6,"line_end":6,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"use hyper::server::conn::{AddrIncoming, Http};","highlight_start":41,"highlight_end":45}],"label":"no `Http` in `server::conn`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `hyper::server::conn::Http`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse hyper::server::conn::{AddrIncoming, Http};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Http` in `server::conn`\u001b[0m\n\n"}
{"message":"the trait bound `tokio_native_tls::TlsAcceptor: AsyncTls<_>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":757,"byte_end":791,"line_start":21,"line_end":21,"column_start":17,"column_end":51,"is_primary":true,"text":[{"text":"        .listen(AddrIncoming::bind(&addr).unwrap());","highlight_start":17,"highlight_end":51}],"label":"the trait `AsyncTls<_>` is not implemented for `tokio_native_tls::TlsAcceptor`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":750,"byte_end":756,"line_start":21,"line_end":21,"column_start":10,"column_end":16,"is_primary":false,"text":[{"text":"        .listen(AddrIncoming::bind(&addr).unwrap());","highlight_start":10,"highlight_end":16}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `tls_listener::Builder::<T>::listen`","code":null,"level":"note","spans":[{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":11054,"byte_end":11060,"line_start":323,"line_end":323,"column_start":12,"column_end":18,"is_primary":false,"text":[{"text":"    pub fn listen<A: AsyncAccept>(&self, listener: A) -> TlsListener<A, T>","highlight_start":12,"highlight_end":18}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":11139,"byte_end":11162,"line_start":325,"line_end":325,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"        T: AsyncTls<A::Connection>,","highlight_start":12,"highlight_end":35}],"label":"required by this bound in `Builder::<T>::listen`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `tokio_native_tls::TlsAcceptor: AsyncTls<_>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .listen(AddrIncoming::bind(&addr).unwrap());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `AsyncTls<_>` is not implemented for `tokio_native_tls::TlsAcceptor`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tls_listener::Builder::<T>::listen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs:325:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn listen<A: AsyncAccept>(&self, listener: A) -> TlsListener<A, T>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        T: AsyncTls<A::Connection>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Builder::<T>::listen`\u001b[0m\n\n"}
{"message":"the trait bound `tokio_native_tls::TlsAcceptor: AsyncTls<_>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":750,"byte_end":756,"line_start":21,"line_end":21,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"        .listen(AddrIncoming::bind(&addr).unwrap());","highlight_start":10,"highlight_end":16}],"label":"the trait `AsyncTls<_>` is not implemented for `tokio_native_tls::TlsAcceptor`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `TlsListener`","code":null,"level":"note","spans":[{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":4558,"byte_end":4569,"line_start":125,"line_end":125,"column_start":16,"column_end":27,"is_primary":false,"text":[{"text":"    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {","highlight_start":16,"highlight_end":27}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":51219,"byte_end":51234,"line_start":1592,"line_end":1592,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    $(: $generics_bound)?","highlight_start":25,"highlight_end":40}],"label":"required by this bound in `TlsListener`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48909,"byte_end":49201,"line_start":1520,"line_end":1528,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9225,"byte_end":9311,"line_start":340,"line_end":343,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":3151,"byte_end":4794,"line_start":97,"line_end":133,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself","highlight_start":1,"highlight_end":99},{"text":"    /// encrypted using TLS.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// It is similar to:","highlight_start":1,"highlight_end":26},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// ```ignore","highlight_start":1,"highlight_end":18},{"text":"    /// tcpListener.and_then(|s| tlsAcceptor.accept(s))","highlight_start":1,"highlight_end":56},{"text":"    /// ```","highlight_start":1,"highlight_end":12},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// except that it has the ability to accept multiple transport-level connections","highlight_start":1,"highlight_end":86},{"text":"    /// simultaneously while the TLS handshake is pending for other connections.","highlight_start":1,"highlight_end":81},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// By default, if a client fails the TLS handshake, that is treated as an error, and the","highlight_start":1,"highlight_end":94},{"text":"    /// `TlsListener` will return an `Err`. If the `TlsListener` is passed directly to a hyper","highlight_start":1,"highlight_end":95},{"text":"    /// [`Server`][1], then an invalid handshake can cause the server to stop accepting connections.","highlight_start":1,"highlight_end":101},{"text":"    /// See [`http-stream.rs`][2] or [`http-low-level`][3] examples, for examples of how to avoid this.","highlight_start":1,"highlight_end":104},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Note that if the maximum number of pending connections is greater than 1, the resulting","highlight_start":1,"highlight_end":96},{"text":"    /// [`T::Stream`][4] connections may come in a different order than the connections produced by the","highlight_start":1,"highlight_end":104},{"text":"    /// underlying listener.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// [1]: https://docs.rs/hyper/latest/hyper/server/struct.Server.html","highlight_start":1,"highlight_end":74},{"text":"    /// [2]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-stream.rs","highlight_start":1,"highlight_end":88},{"text":"    /// [3]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-low-level.rs","highlight_start":1,"highlight_end":91},{"text":"    /// [4]: AsyncTls::Stream","highlight_start":1,"highlight_end":30},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {","highlight_start":1,"highlight_end":73},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        listener: A,","highlight_start":1,"highlight_end":21},{"text":"        tls: T,","highlight_start":1,"highlight_end":16},{"text":"        waiting: FuturesUnordered<Timeout<T::AcceptFuture>>,","highlight_start":1,"highlight_end":61},{"text":"        max_handshakes: usize,","highlight_start":1,"highlight_end":31},{"text":"        timeout: Duration,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9168,"byte_end":9192,"line_start":338,"line_end":338,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":49815,"byte_end":49856,"line_start":1553,"line_end":1553,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `tokio_native_tls::TlsAcceptor: AsyncTls<_>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .listen(AddrIncoming::bind(&addr).unwrap());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `AsyncTls<_>` is not implemented for `tokio_native_tls::TlsAcceptor`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `TlsListener`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs:97:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// encrypted using TLS.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `TlsListener`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__pin_project_parse_generics` which comes from the expansion of the macro `pin_project` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `AddrIncoming: AsyncAccept` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":757,"byte_end":791,"line_start":21,"line_end":21,"column_start":17,"column_end":51,"is_primary":true,"text":[{"text":"        .listen(AddrIncoming::bind(&addr).unwrap());","highlight_start":17,"highlight_end":51}],"label":"the trait `AsyncAccept` is not implemented for `AddrIncoming`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":750,"byte_end":756,"line_start":21,"line_end":21,"column_start":10,"column_end":16,"is_primary":false,"text":[{"text":"        .listen(AddrIncoming::bind(&addr).unwrap());","highlight_start":10,"highlight_end":16}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `AsyncAccept`:\n  Until<A, E>\n  tokio::net::TcpListener\n  tokio::net::UnixListener","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `tls_listener::Builder::<T>::listen`","code":null,"level":"note","spans":[{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":11064,"byte_end":11075,"line_start":323,"line_end":323,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn listen<A: AsyncAccept>(&self, listener: A) -> TlsListener<A, T>","highlight_start":22,"highlight_end":33}],"label":"required by this bound in `Builder::<T>::listen`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `AddrIncoming: AsyncAccept` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .listen(AddrIncoming::bind(&addr).unwrap());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `AsyncAccept` is not implemented for `AddrIncoming`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `AsyncAccept`:\u001b[0m\n\u001b[0m              Until<A, E>\u001b[0m\n\u001b[0m              tokio::net::TcpListener\u001b[0m\n\u001b[0m              tokio::net::UnixListener\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `tls_listener::Builder::<T>::listen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs:323:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn listen<A: AsyncAccept>(&self, listener: A) -> TlsListener<A, T>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Builder::<T>::listen`\u001b[0m\n\n"}
{"message":"the method `for_each` exists for struct `TlsListener<AddrIncoming, TlsAcceptor>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":941,"byte_end":959,"line_start":27,"line_end":28,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    listener","highlight_start":5,"highlight_end":13},{"text":"        .for_each(|r| async {","highlight_start":1,"highlight_end":10}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":959,"byte_end":967,"line_start":28,"line_end":28,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .for_each(|r| async {","highlight_start":10,"highlight_end":18}],"label":"method cannot be called on `TlsListener<AddrIncoming, TlsAcceptor>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":22045,"byte_end":22225,"line_start":687,"line_end":694,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $ident $($def_generics)*","highlight_start":9,"highlight_end":45},{"text":"        $(where","highlight_start":1,"highlight_end":16},{"text":"            $($where_clause)*)?","highlight_start":1,"highlight_end":32},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $field_vis $field: $field_ty","highlight_start":1,"highlight_end":45},{"text":"            ),+","highlight_start":1,"highlight_end":16},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"doesn't satisfy `_: Iterator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":10249,"byte_end":10525,"line_start":373,"line_end":380,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_reconstruct! {","highlight_start":9,"highlight_end":45},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":50839,"byte_end":52089,"line_start":1582,"line_end":1616,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48909,"byte_end":49201,"line_start":1520,"line_end":1528,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9225,"byte_end":9311,"line_start":340,"line_end":343,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":3151,"byte_end":4794,"line_start":97,"line_end":133,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself","highlight_start":1,"highlight_end":99},{"text":"    /// encrypted using TLS.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// It is similar to:","highlight_start":1,"highlight_end":26},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// ```ignore","highlight_start":1,"highlight_end":18},{"text":"    /// tcpListener.and_then(|s| tlsAcceptor.accept(s))","highlight_start":1,"highlight_end":56},{"text":"    /// ```","highlight_start":1,"highlight_end":12},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// except that it has the ability to accept multiple transport-level connections","highlight_start":1,"highlight_end":86},{"text":"    /// simultaneously while the TLS handshake is pending for other connections.","highlight_start":1,"highlight_end":81},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// By default, if a client fails the TLS handshake, that is treated as an error, and the","highlight_start":1,"highlight_end":94},{"text":"    /// `TlsListener` will return an `Err`. If the `TlsListener` is passed directly to a hyper","highlight_start":1,"highlight_end":95},{"text":"    /// [`Server`][1], then an invalid handshake can cause the server to stop accepting connections.","highlight_start":1,"highlight_end":101},{"text":"    /// See [`http-stream.rs`][2] or [`http-low-level`][3] examples, for examples of how to avoid this.","highlight_start":1,"highlight_end":104},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Note that if the maximum number of pending connections is greater than 1, the resulting","highlight_start":1,"highlight_end":96},{"text":"    /// [`T::Stream`][4] connections may come in a different order than the connections produced by the","highlight_start":1,"highlight_end":104},{"text":"    /// underlying listener.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// [1]: https://docs.rs/hyper/latest/hyper/server/struct.Server.html","highlight_start":1,"highlight_end":74},{"text":"    /// [2]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-stream.rs","highlight_start":1,"highlight_end":88},{"text":"    /// [3]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-low-level.rs","highlight_start":1,"highlight_end":91},{"text":"    /// [4]: AsyncTls::Stream","highlight_start":1,"highlight_end":30},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {","highlight_start":1,"highlight_end":73},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        listener: A,","highlight_start":1,"highlight_end":21},{"text":"        tls: T,","highlight_start":1,"highlight_end":16},{"text":"        waiting: FuturesUnordered<Timeout<T::AcceptFuture>>,","highlight_start":1,"highlight_end":61},{"text":"        max_handshakes: usize,","highlight_start":1,"highlight_end":31},{"text":"        timeout: Duration,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9168,"byte_end":9192,"line_start":338,"line_end":338,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":49815,"byte_end":49856,"line_start":1553,"line_end":1553,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9703,"byte_end":9736,"line_start":358,"line_end":358,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_reconstruct!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":21632,"byte_end":21670,"line_start":674,"line_end":674,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_reconstruct {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":22045,"byte_end":22225,"line_start":687,"line_end":694,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $ident $($def_generics)*","highlight_start":9,"highlight_end":45},{"text":"        $(where","highlight_start":1,"highlight_end":16},{"text":"            $($where_clause)*)?","highlight_start":1,"highlight_end":32},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $field_vis $field: $field_ty","highlight_start":1,"highlight_end":45},{"text":"            ),+","highlight_start":1,"highlight_end":16},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"doesn't satisfy `_: StreamExt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":10249,"byte_end":10525,"line_start":373,"line_end":380,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_reconstruct! {","highlight_start":9,"highlight_end":45},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":50839,"byte_end":52089,"line_start":1582,"line_end":1616,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48909,"byte_end":49201,"line_start":1520,"line_end":1528,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9225,"byte_end":9311,"line_start":340,"line_end":343,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":3151,"byte_end":4794,"line_start":97,"line_end":133,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself","highlight_start":1,"highlight_end":99},{"text":"    /// encrypted using TLS.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// It is similar to:","highlight_start":1,"highlight_end":26},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// ```ignore","highlight_start":1,"highlight_end":18},{"text":"    /// tcpListener.and_then(|s| tlsAcceptor.accept(s))","highlight_start":1,"highlight_end":56},{"text":"    /// ```","highlight_start":1,"highlight_end":12},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// except that it has the ability to accept multiple transport-level connections","highlight_start":1,"highlight_end":86},{"text":"    /// simultaneously while the TLS handshake is pending for other connections.","highlight_start":1,"highlight_end":81},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// By default, if a client fails the TLS handshake, that is treated as an error, and the","highlight_start":1,"highlight_end":94},{"text":"    /// `TlsListener` will return an `Err`. If the `TlsListener` is passed directly to a hyper","highlight_start":1,"highlight_end":95},{"text":"    /// [`Server`][1], then an invalid handshake can cause the server to stop accepting connections.","highlight_start":1,"highlight_end":101},{"text":"    /// See [`http-stream.rs`][2] or [`http-low-level`][3] examples, for examples of how to avoid this.","highlight_start":1,"highlight_end":104},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Note that if the maximum number of pending connections is greater than 1, the resulting","highlight_start":1,"highlight_end":96},{"text":"    /// [`T::Stream`][4] connections may come in a different order than the connections produced by the","highlight_start":1,"highlight_end":104},{"text":"    /// underlying listener.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// [1]: https://docs.rs/hyper/latest/hyper/server/struct.Server.html","highlight_start":1,"highlight_end":74},{"text":"    /// [2]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-stream.rs","highlight_start":1,"highlight_end":88},{"text":"    /// [3]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-low-level.rs","highlight_start":1,"highlight_end":91},{"text":"    /// [4]: AsyncTls::Stream","highlight_start":1,"highlight_end":30},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {","highlight_start":1,"highlight_end":73},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        listener: A,","highlight_start":1,"highlight_end":21},{"text":"        tls: T,","highlight_start":1,"highlight_end":16},{"text":"        waiting: FuturesUnordered<Timeout<T::AcceptFuture>>,","highlight_start":1,"highlight_end":61},{"text":"        max_handshakes: usize,","highlight_start":1,"highlight_end":31},{"text":"        timeout: Duration,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9168,"byte_end":9192,"line_start":338,"line_end":338,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":49815,"byte_end":49856,"line_start":1553,"line_end":1553,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9703,"byte_end":9736,"line_start":358,"line_end":358,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_reconstruct!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":21632,"byte_end":21670,"line_start":674,"line_end":674,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_reconstruct {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":22045,"byte_end":22225,"line_start":687,"line_end":694,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $ident $($def_generics)*","highlight_start":9,"highlight_end":45},{"text":"        $(where","highlight_start":1,"highlight_end":16},{"text":"            $($where_clause)*)?","highlight_start":1,"highlight_end":32},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $field_vis $field: $field_ty","highlight_start":1,"highlight_end":45},{"text":"            ),+","highlight_start":1,"highlight_end":16},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"doesn't satisfy `_: Stream`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":10249,"byte_end":10525,"line_start":373,"line_end":380,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_reconstruct! {","highlight_start":9,"highlight_end":45},{"text":"            [$(#[$attrs])* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":57},{"text":"            [$($def_generics)*] [$($impl_generics)*]","highlight_start":1,"highlight_end":53},{"text":"            [$($ty_generics)*] [$(where $($where_clause)*)?]","highlight_start":1,"highlight_end":61},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":50839,"byte_end":52089,"line_start":1582,"line_end":1616,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_expand! {","highlight_start":9,"highlight_end":40},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$proj_vis]","highlight_start":1,"highlight_end":24},{"text":"            [$($attrs)* $vis $struct_ty_ident $ident]","highlight_start":1,"highlight_end":54},{"text":"            [$(<","highlight_start":1,"highlight_end":17},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(= $generics_default)?","highlight_start":1,"highlight_end":44},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            >)?]","highlight_start":1,"highlight_end":17},{"text":"            [$(","highlight_start":1,"highlight_end":16},{"text":"                $( $lifetime $(: $lifetime_bound)? ,)*","highlight_start":1,"highlight_end":55},{"text":"                $( $generics","highlight_start":1,"highlight_end":29},{"text":"                    $(: $generics_bound)?","highlight_start":1,"highlight_end":42},{"text":"                    $(: ?$generics_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                    $(: $generics_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"                ),*","highlight_start":1,"highlight_end":20},{"text":"            )?]","highlight_start":1,"highlight_end":16},{"text":"            [$( $( $lifetime ,)* $( $generics ),* )?]","highlight_start":1,"highlight_end":54},{"text":"            [$(where $( $where_clause_ty","highlight_start":1,"highlight_end":41},{"text":"                $(: $where_clause_bound)?","highlight_start":1,"highlight_end":42},{"text":"                $(: ?$where_clause_unsized_bound)?","highlight_start":1,"highlight_end":51},{"text":"                $(: $where_clause_lifetime_bound)?","highlight_start":1,"highlight_end":51},{"text":"            ),* )?]","highlight_start":1,"highlight_end":20},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                $($body_data)*","highlight_start":1,"highlight_end":31},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            $($(#[$drop_impl_attrs])* impl $($pinned_drop)*)?","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48909,"byte_end":49201,"line_start":1520,"line_end":1528,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_parse_generics! {","highlight_start":9,"highlight_end":48},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$($proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":39},{"text":"            [$($attrs)*]","highlight_start":1,"highlight_end":25},{"text":"            [pub $struct_ty_ident $ident pub(crate)]","highlight_start":1,"highlight_end":53},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":48320,"byte_end":48569,"line_start":1500,"line_end":1507,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [$($proj_mut_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_ref_ident)?]","highlight_start":1,"highlight_end":34},{"text":"            [$($proj_replace_ident)?]","highlight_start":1,"highlight_end":38},{"text":"            [$( ! $proj_not_unpin_mark)?]","highlight_start":1,"highlight_end":42},{"text":"            [$($attrs)* #[$($attr)*]]","highlight_start":1,"highlight_end":38},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9225,"byte_end":9311,"line_start":340,"line_end":343,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $crate::__pin_project_internal! {","highlight_start":9,"highlight_end":42},{"text":"            [][][][][]","highlight_start":1,"highlight_end":23},{"text":"            $($tt)*","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs","byte_start":3151,"byte_end":4794,"line_start":97,"line_end":133,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pin_project! {","highlight_start":1,"highlight_end":15},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself","highlight_start":1,"highlight_end":99},{"text":"    /// encrypted using TLS.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// It is similar to:","highlight_start":1,"highlight_end":26},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// ```ignore","highlight_start":1,"highlight_end":18},{"text":"    /// tcpListener.and_then(|s| tlsAcceptor.accept(s))","highlight_start":1,"highlight_end":56},{"text":"    /// ```","highlight_start":1,"highlight_end":12},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// except that it has the ability to accept multiple transport-level connections","highlight_start":1,"highlight_end":86},{"text":"    /// simultaneously while the TLS handshake is pending for other connections.","highlight_start":1,"highlight_end":81},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// By default, if a client fails the TLS handshake, that is treated as an error, and the","highlight_start":1,"highlight_end":94},{"text":"    /// `TlsListener` will return an `Err`. If the `TlsListener` is passed directly to a hyper","highlight_start":1,"highlight_end":95},{"text":"    /// [`Server`][1], then an invalid handshake can cause the server to stop accepting connections.","highlight_start":1,"highlight_end":101},{"text":"    /// See [`http-stream.rs`][2] or [`http-low-level`][3] examples, for examples of how to avoid this.","highlight_start":1,"highlight_end":104},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// Note that if the maximum number of pending connections is greater than 1, the resulting","highlight_start":1,"highlight_end":96},{"text":"    /// [`T::Stream`][4] connections may come in a different order than the connections produced by the","highlight_start":1,"highlight_end":104},{"text":"    /// underlying listener.","highlight_start":1,"highlight_end":29},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// [1]: https://docs.rs/hyper/latest/hyper/server/struct.Server.html","highlight_start":1,"highlight_end":74},{"text":"    /// [2]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-stream.rs","highlight_start":1,"highlight_end":88},{"text":"    /// [3]: https://github.com/tmccombs/tls-listener/blob/main/examples/http-low-level.rs","highlight_start":1,"highlight_end":91},{"text":"    /// [4]: AsyncTls::Stream","highlight_start":1,"highlight_end":30},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    pub struct TlsListener<A: AsyncAccept, T: AsyncTls<A::Connection>> {","highlight_start":1,"highlight_end":73},{"text":"        #[pin]","highlight_start":1,"highlight_end":15},{"text":"        listener: A,","highlight_start":1,"highlight_end":21},{"text":"        tls: T,","highlight_start":1,"highlight_end":16},{"text":"        waiting: FuturesUnordered<Timeout<T::AcceptFuture>>,","highlight_start":1,"highlight_end":61},{"text":"        max_handshakes: usize,","highlight_start":1,"highlight_end":31},{"text":"        timeout: Duration,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"pin_project!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9168,"byte_end":9192,"line_start":338,"line_end":338,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! pin_project {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_internal!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":45832,"byte_end":45867,"line_start":1407,"line_end":1407,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_internal {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_parse_generics!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":49815,"byte_end":49856,"line_start":1553,"line_end":1553,"column_start":1,"column_end":42,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_parse_generics {","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_expand!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":9703,"byte_end":9736,"line_start":358,"line_end":358,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_expand {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pin_project_reconstruct!","def_site_span":{"file_name":"/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.13/src/lib.rs","byte_start":21632,"byte_end":21670,"line_start":674,"line_end":674,"column_start":1,"column_end":39,"is_primary":false,"text":[{"text":"macro_rules! __pin_project_reconstruct {","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following trait bounds were not satisfied:\n`TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\nwhich is required by `TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\n`&TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\nwhich is required by `&TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\n`&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\nwhich is required by `&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\n`TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Iterator`\nwhich is required by `&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Iterator`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `for_each` exists for struct `TlsListener<AddrIncoming, TlsAcceptor>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    listener\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .for_each(|r| async {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `TlsListener<AddrIncoming, TlsAcceptor>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/tarun/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tls-listener-0.7.0/src/lib.rs:97:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpin_project! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Wraps a `Stream` of connections (such as a TCP listener) so that each connection is itself\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// encrypted using TLS.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Iterator`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: StreamExt`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Stream`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\u001b[0m\n\u001b[0m            which is required by `TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\u001b[0m\n\u001b[0m            `&TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\u001b[0m\n\u001b[0m            which is required by `&TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\u001b[0m\n\u001b[0m            `&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Stream`\u001b[0m\n\u001b[0m            which is required by `&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: StreamExt`\u001b[0m\n\u001b[0m            `TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Iterator`\u001b[0m\n\u001b[0m            which is required by `&mut TlsListener<AddrIncoming, tokio_native_tls::TlsAcceptor>: Iterator`\u001b[0m\n\n"}
{"message":"unused import: `futures_util::stream::StreamExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":4,"byte_end":35,"line_start":1,"line_end":1,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use futures_util::stream::StreamExt;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `futures_util::stream::StreamExt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse futures_util::stream::StreamExt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0432, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
